//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (https://www.swig.org).
// Version 4.3.1
//
// Do not make changes to this file unless you know what you are doing - modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------

namespace Eclipse.Sumo.Libsumo {

public class TraCINextStopData : global::System.IDisposable {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;
  private bool swigCMemOwnBase;

  internal TraCINextStopData(global::System.IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwnBase = cMemoryOwn;
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(TraCINextStopData obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }

  ~TraCINextStopData() {
    Dispose(false);
  }

  public void Dispose() {
    Dispose(true);
    global::System.GC.SuppressFinalize(this);
  }

  protected virtual void Dispose(bool disposing) {
    lock(this) {
      if (swigCPtr.Handle != global::System.IntPtr.Zero) {
        if (swigCMemOwnBase) {
          swigCMemOwnBase = false;
          libsumoPINVOKE.delete_TraCINextStopData(swigCPtr);
        }
        swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
      }
    }
  }

  public TraCINextStopData(string lane, double startPos, double endPos, string stoppingPlaceID, int stopFlags, double duration, double until, double intendedArrival, double arrival, double depart, string split, string join, string actType, string tripId, string line, double speed) : this(libsumoPINVOKE.new_TraCINextStopData__SWIG_0(lane, startPos, endPos, stoppingPlaceID, stopFlags, duration, until, intendedArrival, arrival, depart, split, join, actType, tripId, line, speed), true) {
    if (libsumoPINVOKE.SWIGPendingException.Pending) throw libsumoPINVOKE.SWIGPendingException.Retrieve();
  }

  public TraCINextStopData(string lane, double startPos, double endPos, string stoppingPlaceID, int stopFlags, double duration, double until, double intendedArrival, double arrival, double depart, string split, string join, string actType, string tripId, string line) : this(libsumoPINVOKE.new_TraCINextStopData__SWIG_1(lane, startPos, endPos, stoppingPlaceID, stopFlags, duration, until, intendedArrival, arrival, depart, split, join, actType, tripId, line), true) {
    if (libsumoPINVOKE.SWIGPendingException.Pending) throw libsumoPINVOKE.SWIGPendingException.Retrieve();
  }

  public TraCINextStopData(string lane, double startPos, double endPos, string stoppingPlaceID, int stopFlags, double duration, double until, double intendedArrival, double arrival, double depart, string split, string join, string actType, string tripId) : this(libsumoPINVOKE.new_TraCINextStopData__SWIG_2(lane, startPos, endPos, stoppingPlaceID, stopFlags, duration, until, intendedArrival, arrival, depart, split, join, actType, tripId), true) {
    if (libsumoPINVOKE.SWIGPendingException.Pending) throw libsumoPINVOKE.SWIGPendingException.Retrieve();
  }

  public TraCINextStopData(string lane, double startPos, double endPos, string stoppingPlaceID, int stopFlags, double duration, double until, double intendedArrival, double arrival, double depart, string split, string join, string actType) : this(libsumoPINVOKE.new_TraCINextStopData__SWIG_3(lane, startPos, endPos, stoppingPlaceID, stopFlags, duration, until, intendedArrival, arrival, depart, split, join, actType), true) {
    if (libsumoPINVOKE.SWIGPendingException.Pending) throw libsumoPINVOKE.SWIGPendingException.Retrieve();
  }

  public TraCINextStopData(string lane, double startPos, double endPos, string stoppingPlaceID, int stopFlags, double duration, double until, double intendedArrival, double arrival, double depart, string split, string join) : this(libsumoPINVOKE.new_TraCINextStopData__SWIG_4(lane, startPos, endPos, stoppingPlaceID, stopFlags, duration, until, intendedArrival, arrival, depart, split, join), true) {
    if (libsumoPINVOKE.SWIGPendingException.Pending) throw libsumoPINVOKE.SWIGPendingException.Retrieve();
  }

  public TraCINextStopData(string lane, double startPos, double endPos, string stoppingPlaceID, int stopFlags, double duration, double until, double intendedArrival, double arrival, double depart, string split) : this(libsumoPINVOKE.new_TraCINextStopData__SWIG_5(lane, startPos, endPos, stoppingPlaceID, stopFlags, duration, until, intendedArrival, arrival, depart, split), true) {
    if (libsumoPINVOKE.SWIGPendingException.Pending) throw libsumoPINVOKE.SWIGPendingException.Retrieve();
  }

  public TraCINextStopData(string lane, double startPos, double endPos, string stoppingPlaceID, int stopFlags, double duration, double until, double intendedArrival, double arrival, double depart) : this(libsumoPINVOKE.new_TraCINextStopData__SWIG_6(lane, startPos, endPos, stoppingPlaceID, stopFlags, duration, until, intendedArrival, arrival, depart), true) {
    if (libsumoPINVOKE.SWIGPendingException.Pending) throw libsumoPINVOKE.SWIGPendingException.Retrieve();
  }

  public TraCINextStopData(string lane, double startPos, double endPos, string stoppingPlaceID, int stopFlags, double duration, double until, double intendedArrival, double arrival) : this(libsumoPINVOKE.new_TraCINextStopData__SWIG_7(lane, startPos, endPos, stoppingPlaceID, stopFlags, duration, until, intendedArrival, arrival), true) {
    if (libsumoPINVOKE.SWIGPendingException.Pending) throw libsumoPINVOKE.SWIGPendingException.Retrieve();
  }

  public TraCINextStopData(string lane, double startPos, double endPos, string stoppingPlaceID, int stopFlags, double duration, double until, double intendedArrival) : this(libsumoPINVOKE.new_TraCINextStopData__SWIG_8(lane, startPos, endPos, stoppingPlaceID, stopFlags, duration, until, intendedArrival), true) {
    if (libsumoPINVOKE.SWIGPendingException.Pending) throw libsumoPINVOKE.SWIGPendingException.Retrieve();
  }

  public TraCINextStopData(string lane, double startPos, double endPos, string stoppingPlaceID, int stopFlags, double duration, double until) : this(libsumoPINVOKE.new_TraCINextStopData__SWIG_9(lane, startPos, endPos, stoppingPlaceID, stopFlags, duration, until), true) {
    if (libsumoPINVOKE.SWIGPendingException.Pending) throw libsumoPINVOKE.SWIGPendingException.Retrieve();
  }

  public TraCINextStopData(string lane, double startPos, double endPos, string stoppingPlaceID, int stopFlags, double duration) : this(libsumoPINVOKE.new_TraCINextStopData__SWIG_10(lane, startPos, endPos, stoppingPlaceID, stopFlags, duration), true) {
    if (libsumoPINVOKE.SWIGPendingException.Pending) throw libsumoPINVOKE.SWIGPendingException.Retrieve();
  }

  public TraCINextStopData(string lane, double startPos, double endPos, string stoppingPlaceID, int stopFlags) : this(libsumoPINVOKE.new_TraCINextStopData__SWIG_11(lane, startPos, endPos, stoppingPlaceID, stopFlags), true) {
    if (libsumoPINVOKE.SWIGPendingException.Pending) throw libsumoPINVOKE.SWIGPendingException.Retrieve();
  }

  public TraCINextStopData(string lane, double startPos, double endPos, string stoppingPlaceID) : this(libsumoPINVOKE.new_TraCINextStopData__SWIG_12(lane, startPos, endPos, stoppingPlaceID), true) {
    if (libsumoPINVOKE.SWIGPendingException.Pending) throw libsumoPINVOKE.SWIGPendingException.Retrieve();
  }

  public TraCINextStopData(string lane, double startPos, double endPos) : this(libsumoPINVOKE.new_TraCINextStopData__SWIG_13(lane, startPos, endPos), true) {
    if (libsumoPINVOKE.SWIGPendingException.Pending) throw libsumoPINVOKE.SWIGPendingException.Retrieve();
  }

  public TraCINextStopData(string lane, double startPos) : this(libsumoPINVOKE.new_TraCINextStopData__SWIG_14(lane, startPos), true) {
    if (libsumoPINVOKE.SWIGPendingException.Pending) throw libsumoPINVOKE.SWIGPendingException.Retrieve();
  }

  public TraCINextStopData(string lane) : this(libsumoPINVOKE.new_TraCINextStopData__SWIG_15(lane), true) {
    if (libsumoPINVOKE.SWIGPendingException.Pending) throw libsumoPINVOKE.SWIGPendingException.Retrieve();
  }

  public TraCINextStopData() : this(libsumoPINVOKE.new_TraCINextStopData__SWIG_16(), true) {
    if (libsumoPINVOKE.SWIGPendingException.Pending) throw libsumoPINVOKE.SWIGPendingException.Retrieve();
  }

  public string getString() {
    string ret = libsumoPINVOKE.TraCINextStopData_getString(swigCPtr);
    if (libsumoPINVOKE.SWIGPendingException.Pending) throw libsumoPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public string lane {
    set {
      libsumoPINVOKE.TraCINextStopData_lane_set(swigCPtr, value);
      if (libsumoPINVOKE.SWIGPendingException.Pending) throw libsumoPINVOKE.SWIGPendingException.Retrieve();
    } 
    get {
      string ret = libsumoPINVOKE.TraCINextStopData_lane_get(swigCPtr);
      if (libsumoPINVOKE.SWIGPendingException.Pending) throw libsumoPINVOKE.SWIGPendingException.Retrieve();
      return ret;
    } 
  }

  public double startPos {
    set {
      libsumoPINVOKE.TraCINextStopData_startPos_set(swigCPtr, value);
      if (libsumoPINVOKE.SWIGPendingException.Pending) throw libsumoPINVOKE.SWIGPendingException.Retrieve();
    } 
    get {
      double ret = libsumoPINVOKE.TraCINextStopData_startPos_get(swigCPtr);
      if (libsumoPINVOKE.SWIGPendingException.Pending) throw libsumoPINVOKE.SWIGPendingException.Retrieve();
      return ret;
    } 
  }

  public double endPos {
    set {
      libsumoPINVOKE.TraCINextStopData_endPos_set(swigCPtr, value);
      if (libsumoPINVOKE.SWIGPendingException.Pending) throw libsumoPINVOKE.SWIGPendingException.Retrieve();
    } 
    get {
      double ret = libsumoPINVOKE.TraCINextStopData_endPos_get(swigCPtr);
      if (libsumoPINVOKE.SWIGPendingException.Pending) throw libsumoPINVOKE.SWIGPendingException.Retrieve();
      return ret;
    } 
  }

  public string stoppingPlaceID {
    set {
      libsumoPINVOKE.TraCINextStopData_stoppingPlaceID_set(swigCPtr, value);
      if (libsumoPINVOKE.SWIGPendingException.Pending) throw libsumoPINVOKE.SWIGPendingException.Retrieve();
    } 
    get {
      string ret = libsumoPINVOKE.TraCINextStopData_stoppingPlaceID_get(swigCPtr);
      if (libsumoPINVOKE.SWIGPendingException.Pending) throw libsumoPINVOKE.SWIGPendingException.Retrieve();
      return ret;
    } 
  }

  public int stopFlags {
    set {
      libsumoPINVOKE.TraCINextStopData_stopFlags_set(swigCPtr, value);
      if (libsumoPINVOKE.SWIGPendingException.Pending) throw libsumoPINVOKE.SWIGPendingException.Retrieve();
    } 
    get {
      int ret = libsumoPINVOKE.TraCINextStopData_stopFlags_get(swigCPtr);
      if (libsumoPINVOKE.SWIGPendingException.Pending) throw libsumoPINVOKE.SWIGPendingException.Retrieve();
      return ret;
    } 
  }

  public double duration {
    set {
      libsumoPINVOKE.TraCINextStopData_duration_set(swigCPtr, value);
      if (libsumoPINVOKE.SWIGPendingException.Pending) throw libsumoPINVOKE.SWIGPendingException.Retrieve();
    } 
    get {
      double ret = libsumoPINVOKE.TraCINextStopData_duration_get(swigCPtr);
      if (libsumoPINVOKE.SWIGPendingException.Pending) throw libsumoPINVOKE.SWIGPendingException.Retrieve();
      return ret;
    } 
  }

  public double until {
    set {
      libsumoPINVOKE.TraCINextStopData_until_set(swigCPtr, value);
      if (libsumoPINVOKE.SWIGPendingException.Pending) throw libsumoPINVOKE.SWIGPendingException.Retrieve();
    } 
    get {
      double ret = libsumoPINVOKE.TraCINextStopData_until_get(swigCPtr);
      if (libsumoPINVOKE.SWIGPendingException.Pending) throw libsumoPINVOKE.SWIGPendingException.Retrieve();
      return ret;
    } 
  }

  public double intendedArrival {
    set {
      libsumoPINVOKE.TraCINextStopData_intendedArrival_set(swigCPtr, value);
      if (libsumoPINVOKE.SWIGPendingException.Pending) throw libsumoPINVOKE.SWIGPendingException.Retrieve();
    } 
    get {
      double ret = libsumoPINVOKE.TraCINextStopData_intendedArrival_get(swigCPtr);
      if (libsumoPINVOKE.SWIGPendingException.Pending) throw libsumoPINVOKE.SWIGPendingException.Retrieve();
      return ret;
    } 
  }

  public double arrival {
    set {
      libsumoPINVOKE.TraCINextStopData_arrival_set(swigCPtr, value);
      if (libsumoPINVOKE.SWIGPendingException.Pending) throw libsumoPINVOKE.SWIGPendingException.Retrieve();
    } 
    get {
      double ret = libsumoPINVOKE.TraCINextStopData_arrival_get(swigCPtr);
      if (libsumoPINVOKE.SWIGPendingException.Pending) throw libsumoPINVOKE.SWIGPendingException.Retrieve();
      return ret;
    } 
  }

  public double depart {
    set {
      libsumoPINVOKE.TraCINextStopData_depart_set(swigCPtr, value);
      if (libsumoPINVOKE.SWIGPendingException.Pending) throw libsumoPINVOKE.SWIGPendingException.Retrieve();
    } 
    get {
      double ret = libsumoPINVOKE.TraCINextStopData_depart_get(swigCPtr);
      if (libsumoPINVOKE.SWIGPendingException.Pending) throw libsumoPINVOKE.SWIGPendingException.Retrieve();
      return ret;
    } 
  }

  public string split {
    set {
      libsumoPINVOKE.TraCINextStopData_split_set(swigCPtr, value);
      if (libsumoPINVOKE.SWIGPendingException.Pending) throw libsumoPINVOKE.SWIGPendingException.Retrieve();
    } 
    get {
      string ret = libsumoPINVOKE.TraCINextStopData_split_get(swigCPtr);
      if (libsumoPINVOKE.SWIGPendingException.Pending) throw libsumoPINVOKE.SWIGPendingException.Retrieve();
      return ret;
    } 
  }

  public string join {
    set {
      libsumoPINVOKE.TraCINextStopData_join_set(swigCPtr, value);
      if (libsumoPINVOKE.SWIGPendingException.Pending) throw libsumoPINVOKE.SWIGPendingException.Retrieve();
    } 
    get {
      string ret = libsumoPINVOKE.TraCINextStopData_join_get(swigCPtr);
      if (libsumoPINVOKE.SWIGPendingException.Pending) throw libsumoPINVOKE.SWIGPendingException.Retrieve();
      return ret;
    } 
  }

  public string actType {
    set {
      libsumoPINVOKE.TraCINextStopData_actType_set(swigCPtr, value);
      if (libsumoPINVOKE.SWIGPendingException.Pending) throw libsumoPINVOKE.SWIGPendingException.Retrieve();
    } 
    get {
      string ret = libsumoPINVOKE.TraCINextStopData_actType_get(swigCPtr);
      if (libsumoPINVOKE.SWIGPendingException.Pending) throw libsumoPINVOKE.SWIGPendingException.Retrieve();
      return ret;
    } 
  }

  public string tripId {
    set {
      libsumoPINVOKE.TraCINextStopData_tripId_set(swigCPtr, value);
      if (libsumoPINVOKE.SWIGPendingException.Pending) throw libsumoPINVOKE.SWIGPendingException.Retrieve();
    } 
    get {
      string ret = libsumoPINVOKE.TraCINextStopData_tripId_get(swigCPtr);
      if (libsumoPINVOKE.SWIGPendingException.Pending) throw libsumoPINVOKE.SWIGPendingException.Retrieve();
      return ret;
    } 
  }

  public string line {
    set {
      libsumoPINVOKE.TraCINextStopData_line_set(swigCPtr, value);
      if (libsumoPINVOKE.SWIGPendingException.Pending) throw libsumoPINVOKE.SWIGPendingException.Retrieve();
    } 
    get {
      string ret = libsumoPINVOKE.TraCINextStopData_line_get(swigCPtr);
      if (libsumoPINVOKE.SWIGPendingException.Pending) throw libsumoPINVOKE.SWIGPendingException.Retrieve();
      return ret;
    } 
  }

  public double speed {
    set {
      libsumoPINVOKE.TraCINextStopData_speed_set(swigCPtr, value);
      if (libsumoPINVOKE.SWIGPendingException.Pending) throw libsumoPINVOKE.SWIGPendingException.Retrieve();
    } 
    get {
      double ret = libsumoPINVOKE.TraCINextStopData_speed_get(swigCPtr);
      if (libsumoPINVOKE.SWIGPendingException.Pending) throw libsumoPINVOKE.SWIGPendingException.Retrieve();
      return ret;
    } 
  }

}

}
